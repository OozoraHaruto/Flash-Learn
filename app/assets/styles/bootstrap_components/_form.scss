$input-focus-color: #006eea;
$select-control-height: 24px;
$color-dark: $gray-900;

.form-control-borderless {
  @extend .form-control;
  @extend .rounded-0;
  @extend .shadow-none;
  display: block;
  width: 100%;
  padding: $input-padding-y $input-padding-x;
  font-size: $font-size-base;
  line-height: $input-line-height;
  color: $input-color;
  background-color: transparent;
  background-clip: padding-box;
  border-width: 0 0 2px 0;
  border-color: $secondary;


  @include box-shadow($input-box-shadow);
  @include transition($input-transition);

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus();

  // Placeholder
  &::placeholder {
    color: $color-dark;
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }

  &.is-valid {
    border-color: $form-feedback-valid-color;
  }

  &.is-invalid {
    border-color: $form-feedback-invalid-color;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled,
  &[readonly] {
    background-color: $input-disabled-bg;
    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
  }
}


.form-group {
  @extend .mb-0;
  //for animation
  position: relative;
  label{
    position: absolute;
    top: 0;
    left: 0;
    cursor: text;
    color: $input-placeholder-color;
    margin: 0;
    -webkit-transition: all .2s;
    transition: all .2s
  }

  span.focus-border{
    position: absolute;
    bottom: 0;
    left: 50%;
    width: 0;
    height: 2px;
    background-color: $input-focus-color;
    transition: 0.4s;
  }

  input.form-control-borderless, textarea.form-control-borderless{
    @extend .p-0;
    color: $color-dark; //color of text when not focus
    height: 27px;

    &:placeholder-shown:not(:focus)::placeholder { //hide placeholder when input/textbox not focused
      opacity: 0;
      top: 0;
    }

    & ~ label { //when input/textbox is not focused (form label)
      color: $color-dark;

      &.is-valid{
        color: $form-feedback-valid-color;
      }

      &.is-invalid{
        color: $form-feedback-invalid-color;
      }
    }

    &:focus { //when input/textbox is focused (input/textbox)
      color: $color-dark; 
      background-color: transparent;
    }

    &:focus~label, &:not(:placeholder-shown):not(:focus)~label { //when input/textbox is focused or when input/textbox contains value but not focused (form label)
      font-size: 75%;
      top: -12px;
      color: $color-dark;

      &.is-valid{
        color: $form-feedback-valid-color;
      }

      &.is-invalid{
        color: $form-feedback-invalid-color;
      }
    }

    &:focus ~ span.focus-border{ //when input is focused (animated bar)
      width: 100%;
      transition: 0.4s;
      left: 0;
    }
  }

  &~div.error{
    @extend .form-text;
    @extend .text-danger;
    @extend .small;
  }

  // React-Select
  .Select {
    &>div.react-select__control { //wrapper
      @extend .rounded-0;
      background: transparent;
      border-width: 0 0 2px 0;
      border-color: $color-light;
      box-shadow: none;
      background-color: transparent;

      div.react-select__value-container { //label box with all the selection Shit
        @extend .p-0;
        & > div.react-select__placeholder{ //label
          color: $color-light;
        }
      }

      div.react-select__indicators {
        & > div {// drop down carat
          color: $color-light;
        }
      }
    }
    div.react-select__menu {
      @extend .mt-0;
      background-color: #fff;
    }
    &>span {
      @extend .text-dark;
    }
    &>div:nth-child(2) {
      @extend .text-dark;
    }
  }
  &~span.focus-border {
    z-index: 2;
    height: 2px;
  }
  &.touched {
    &~span.focus-border {
      //when input is focused (animated bar)
      width: 100%;
      transition: 0.4s;
      left: 0;
      height:2px;

      &.is-valid {
        background-color: $form-feedback-valid-color;
      }

      &.is-invalid {
        background-color: $form-feedback-invalid-color;
      }
    }
  }
}

.select-no-radius{ //https://getbootstrap.com/docs/4.3/components/input-group/
  @extend .d-inline-block;
  @extend .w-100;
  @extend .rounded-0;
  height: calc(1.5em + .75rem + 2px);
  padding: .375rem 1.75rem .375rem .75rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #495057;
  vertical-align: middle;
  background: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") no-repeat right .75rem center/8px 10px;
  background-color: #fff;
  border: 1px solid #ced4da;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}